{
  "openapi": "3.0.0",
  "info": {
    "title": "Node API boilerplate",
    "version": "v1"
  },
  "servers": [
    {
      "description": "Local server",
      "url": "/api"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "listUsers",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "tags": [ "Users" ],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "showUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "User new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "operationId": "listProjects",
        "tags": [ "Projects" ],
        "responses": {
          "200": {
            "description": "List of all projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createProject",
        "tags": [ "Projects" ],
        "requestBody": {
          "description": "Project data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Project not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "operationId": "showProject",
        "tags": [ "Projects" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of project to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return project with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateProject",
        "tags": [ "Projects" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of project to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Project new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteProject",
        "tags": [ "Projects" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of project to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "defaultResponses": {
    "ValidationError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "ValidationError" ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/defaultResponses/ValidationErrorDetail"
          }
        }
      }
    },
    "ValidationErrorDetail": {
      "properties": {
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "NotFoundError" ]
        },
        "details": {
          "type": "string",
          "enum": [ "User with id {id} not found" ]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a user",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Project": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a project",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
